/*
 * fsm.c
 *
 *  Created on: Oct 10, 2023
 *      Author: Acer
 */


#include "fsm.h"
#include "main.h"
#include "softwareTimer.h"
#include "global.h"

void mode1() {
	switch( led_status ) {
	case 0:
		led_status = 1;
		led7buffer[1] = 5;
		led7buffer[0] = 3;
		break;
	case 1:
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, RESET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
		if( flag1 == 1 ) {
			led_status = 2;
			led7buffer[1] = 2;
			led7buffer[0] = 2;
			setTimer1(3000);
		}
		break;
	case 2:
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, RESET);
		if( flag1 == 1 ) {
			led_status = 3;
			led7buffer[1] = 3;
			led7buffer[0] = 5;
			setTimer1(2000);
		}
		break;
	case 3:
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
		if( flag1 == 1 ) {
			led_status = 4;
			led7buffer[1] = 2;
			led7buffer[0] = 2;
			setTimer1(3000);
		}
		break;
	case 4:
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
		if( flag1 == 1 ) {
			led_status = 1;
			led7buffer[1] = 5;
			led7buffer[0] = 3;
			setTimer1(2000);
		}
		break;
	default:
		break;
	}
	if( flag_7seg == 1 ) {
		led7buffer[0]--;
		led7buffer[1]--;
		if(led7buffer[0] < 0) {
			led7buffer[0] = 5;
		}
		if(led7buffer[1] < 0) {
			led7buffer[1] = 6;
		}
		setTime_counter_7seg(1000);
	}

}

void mode2() {

}

void mode3() {

}

void mode4() {

}

void fsmButton() {
	switch( traffic_status ) {
	case 0:
		traffic_status = 1;
		break;
	case 1:
		mode1();
		led7buffer[2] = 0;
		led7buffer[3] = 1;
		if( isButton1Pressed() == 1 ) {
			traffic_status = 2;
		}
		break;
	case 2:
		mode2();
		led7buffer[2] = 0;
		led7buffer[3] = 2;
		if( isButton1Pressed() == 1 ) {
			traffic_status = 3;
		}
		break;
	case 3:
		mode3();
		led7buffer[2] = 0;
		led7buffer[3] = 3;
		if( isButton1Pressed() == 1 ) {
			traffic_status = 4;
		}
		break;
	case 4:
		mode4();
		led7buffer[2] = 0;
		led7buffer[3] = 4;
		if( isButton1Pressed() == 1 ) {
			traffic_status = 1;
		}
		break;
	default:
		break;
	}
}
